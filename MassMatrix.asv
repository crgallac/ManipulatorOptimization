function [ M ] = MassMatrix( theta, param )
%UNTITLED2 Summary of this function goes here
%   Detailed explanation goes here
phi=theta;

%param=[a0 a1 a2 Ro Ri rho Mmot1 Mmot2 Mgrip]

a0=param(1); 
a1=param(2);
a2=param(3); 
Ro=param(4);
Ri=param(5);
rho=param(6);
Mmot1=param(7);
Mmot2=param(8); 
Mgrip=param(9); 

m0=rho*(Ro^2-Ri^2)*a0; 
m1=rho*(Ro^2-Ri^2)*a1; 
m2=rho*(Ro^2-Ri^2)*a2;

IG0=1/2*m0*(Ro^2+Ri^2); 
IG1=1/12*m1*a1^2;
IG2=1/12*m2*a2^2; 

M= [m1 * a1 ^ 2 / 0.4e1 + m(mot2) * a1 ^ 2 + IG1 + m2 * (0.2e1 * a1 ^ 2 + a2 ^ 2 / 0.2e1 + 0.2e1 * a1 * a2 * cos(phi(2))) / 0.2e1 + Mgrip * (0.2e1 * a1 ^ 2 + 0.2e1 * a2 ^ 2 + 0.4e1 * a1 * a2 * cos(phi(2))) / 0.2e1 + IG2 m2 * (a2 ^ 2 / 0.2e1 + a1 * a2 * cos(phi(2))) / 0.2e1 + Mgrip * (0.2e1 * a2 ^ 2 + 0.2e1 * a1 * a2 * cos(phi(2))) / 0.2e1 + IG2; m2 * (a2 ^ 2 / 0.2e1 + a1 * a2 * cos(phi(2))) / 0.2e1 + Mgrip * (0.2e1 * a2 ^ 2 + 0.2e1 * a1 * a2 * cos(phi(2))) / 0.2e1 + IG2 m2 * a2 ^ 2 / 0.4e1 + Mgrip * a2 ^ 2 + IG2;];
% M = [m1 * cos(phi(1)) ^ 2 * a1 ^ 2 / 0.4e1 + IG0 + IG1 + m2 * cos(phi(1)) * cos(phi(1) + phi(2)) * a1 * a2 + m2 * cos(phi(1)) ^ 2 * a1 ^ 2 + m2 * cos(phi(1) + phi(2)) ^ 2 * a2 ^ 2 / 0.4e1 + Mgrip * cos(phi(1)) ^ 2 * a1 ^ 2 + Mmot2 * cos(phi(1)) ^ 2 * a1 ^ 2 + 0.2e1 * Mgrip * cos(phi(1)) * cos(phi(1) + phi(2)) * a1 * a2 + Mgrip * cos(phi(1) + phi(2)) ^ 2 * a2 ^ 2 + IG2 0 0; 0 Mgrip * a2 ^ 2 + m1 * a1 ^ 2 / 0.4e1 + Mgrip * a1 ^ 2 - IG1 * cos(phi(3)) ^ 2 + IG2 * cos(phi(3)) ^ 2 + Mmot2 * a1 ^ 2 + IG1 * cos(phi(3)) ^ 2 - IG2 * cos(phi(3)) ^ 2 + IG1 + IG2 + m2 * sin(phi(1)) * sin(phi(1) + phi(2)) * a1 * a2 + m2 * cos(phi(1)) * cos(phi(1) + phi(2)) * a1 * a2 + 0.2e1 * Mgrip * cos(phi(1)) * cos(phi(1) + phi(2)) * a1 * a2 + 0.2e1 * Mgrip * sin(phi(1)) * sin(phi(1) + phi(2)) * a1 * a2 + m2 * a1 ^ 2 + m2 * a2 ^ 2 / 0.4e1 IG2 + m2 * a2 ^ 2 / 0.4e1 + m2 * a1 ^ 2 + m2 * sin(phi(1)) * sin(phi(1) + phi(2)) * a1 * a2 + m2 * cos(phi(1)) * cos(phi(1) + phi(2)) * a1 * a2 + 0.2e1 * Mgrip * cos(phi(1)) * cos(phi(1) + phi(2)) * a1 * a2 + 0.2e1 * Mgrip * sin(phi(1)) * sin(phi(1) + phi(2)) * a1 * a2 + Mgrip * a2 ^ 2 - IG2 * cos(phi(3)) ^ 2 + Mgrip * a1 ^ 2 + IG2 * cos(phi(3)) ^ 2; 0 IG2 + m2 * a2 ^ 2 / 0.4e1 + m2 * a1 ^ 2 + m2 * sin(phi(1)) * sin(phi(1) + phi(2)) * a1 * a2 + m2 * cos(phi(1)) * cos(phi(1) + phi(2)) * a1 * a2 + 0.2e1 * Mgrip * cos(phi(1)) * cos(phi(1) + phi(2)) * a1 * a2 + 0.2e1 * Mgrip * sin(phi(1)) * sin(phi(1) + phi(2)) * a1 * a2 + Mgrip * a2 ^ 2 - IG2 * cos(phi(3)) ^ 2 + Mgrip * a1 ^ 2 + IG2 * cos(phi(3)) ^ 2 IG2 + m2 * a2 ^ 2 / 0.4e1 + m2 * a1 ^ 2 + m2 * sin(phi(1)) * sin(phi(1) + phi(2)) * a1 * a2 + m2 * cos(phi(1)) * cos(phi(1) + phi(2)) * a1 * a2 + 0.2e1 * Mgrip * cos(phi(1)) * cos(phi(1) + phi(2)) * a1 * a2 + 0.2e1 * Mgrip * sin(phi(1)) * sin(phi(1) + phi(2)) * a1 * a2 + Mgrip * a2 ^ 2 - IG2 * cos(phi(3)) ^ 2 + Mgrip * a1 ^ 2 + IG2 * cos(phi(3)) ^ 2;];
% J= Jacobian(theta,param);

% Minv=M\eye(3,3); 

% (J*M^-1*J')^-1
% Meff=(J*Minv*J')/eye(3,3);
% M=Meff; 

M=blkdiag(1,M); 

end

